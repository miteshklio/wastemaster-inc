server {
    listen 80;
    return 301 https://$host$request_uri;
}

server {

    listen 443 ssl;
    root /home/public_html/app/current/public;
    index index.php index.html;

    ssl_certificate /etc/nginx/ssl/gamerz.crt;
    ssl_certificate_key /etc/nginx/ssl/gamerz.key;

    ssl_protocols TLSv1.1 TLSv1.2;

    # redirect elb to https
    if ($http_x_forwarded_proto != "https") {
        rewrite ^(.*)$ https://$host$request_uri permanent;
    }

    # serve static files directly
    location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
            access_log off;
            expires max;
    }

    # removes trailing slashes (prevents SEO duplicate content issues)
    if (!-d $request_filename)
    {
            rewrite ^/(.+)/$ /$1 permanent;
    }

    # enforce NO www
    if ($host ~* ^www\.(.*))
    {
        set $host_without_www $1;
        rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
    }

    # removes trailing "index" from all controllers
    if ($request_uri ~* index/?$)
    {
        rewrite ^/(.*)/index/?$ /$1 permanent;
    }

    # unless the request is for a valid file (image, js, css, etc.), send to bootstrap
    if (!-e $request_filename)
    {
        rewrite ^/(.*)$ /index.php?/$1 last;
        break;
    }

    # catch all
    error_page 404 /index.php;

    location ~ \.php$ {  
        try_files $uri $uri/ /index.php;
        fastcgi_pass   unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}
